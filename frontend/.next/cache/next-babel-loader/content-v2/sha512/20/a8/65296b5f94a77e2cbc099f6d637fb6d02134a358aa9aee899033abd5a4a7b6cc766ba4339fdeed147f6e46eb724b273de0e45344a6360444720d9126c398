{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\sale\\\\Desktop\\\\\\u2800\\\\Dev\\\\WEB\\\\NextJS\\\\TechLog\\\\frontend\\\\pages\\\\post\\\\[slug].js\";\nimport groq from \"groq\";\nimport client from \"../../client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport DefaultErrorPage from \"next/error\";\nimport Head from \"next/head\";\nconst builder = imageUrlBuilder(client);\n\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport function getStaticPaths() {\n  return {\n    paths: [],\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // happens on the server side\n  const {\n    slug\n  } = params;\n  /* try and fetch data and then show data, if we dont get data -> 404 */\n\n  const query = groq`\n    *[_type == 'post' && slug.current == '${slug}'][0]{\n        ...,\n        'author': author->name\n    }\n  `;\n  const data = await client.fetch(query); // console.log(data);\n\n  return {\n    revalidate: 60 * 60 * 24,\n    props: {\n      post: data\n    }\n  };\n}\n\nconst SinglePost = ({\n  post\n}) => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    // show loading spinner\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"robots\",\n          content: \"noindex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DefaultErrorPage, {\n        statusCode: 404\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-screen-2xl mx-auto bg-white\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 max-w-2xl\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\" \", post.title, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SinglePost;","map":{"version":3,"sources":["C:/Users/sale/Desktop/â €/Dev/WEB/NextJS/TechLog/frontend/pages/post/[slug].js"],"names":["groq","client","imageUrlBuilder","Image","useRouter","DefaultErrorPage","Head","builder","urlFor","source","image","getStaticPaths","paths","fallback","getStaticProps","params","slug","query","data","fetch","revalidate","props","post","SinglePost","router","isFallback","title"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,gBAAP,MAA6B,YAA7B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,OAAO,GAAGL,eAAe,CAACD,MAAD,CAA/B;;AAEA,SAASO,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOF,OAAO,CAACG,KAAR,CAAcD,MAAd,CAAP;AACD;;AAED,OAAO,SAASE,cAAT,GAA0B;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA0C;AAC/C;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;AAEA;;AACA,QAAME,KAAK,GAAGjB,IAAK;AACrB,4CAA4CgB,IAAK;AACjD;AACA;AACA;AACA,GALE;AAOA,QAAME,IAAI,GAAG,MAAMjB,MAAM,CAACkB,KAAP,CAAaF,KAAb,CAAnB,CAZ+C,CAa/C;;AAEA,SAAO;AACLG,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU,EADjB;AAELC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEJ;AADD;AAFF,GAAP;AAMD;;AAED,MAAMK,UAAU,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAc;AAC/B,QAAME,MAAM,GAAGpB,SAAS,EAAxB;;AAEA,MAAIoB,MAAM,CAACC,UAAX,EAAuB;AACrB;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACH,IAAL,EAAW;AACT,wBACE;AAAA,8BACE,QAAC,IAAD;AAAA,+BACE;AAAM,UAAA,IAAI,EAAC,QAAX;AAAoB,UAAA,OAAO,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,gBAAD;AAAkB,QAAA,UAAU,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAQD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAA,0BAAMA,IAAI,CAACI,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA5BD;;AA8BA,eAAeH,UAAf","sourcesContent":["import groq from \"groq\";\r\nimport client from \"../../client\";\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport DefaultErrorPage from \"next/error\";\r\nimport Head from \"next/head\";\r\n\r\nconst builder = imageUrlBuilder(client);\r\n\r\nfunction urlFor(source) {\r\n  return builder.image(source);\r\n}\r\n\r\nexport function getStaticPaths() {\r\n  return {\r\n    paths: [],\r\n    fallback: true,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  // happens on the server side\r\n  const { slug } = params;\r\n\r\n  /* try and fetch data and then show data, if we dont get data -> 404 */\r\n  const query = groq`\r\n    *[_type == 'post' && slug.current == '${slug}'][0]{\r\n        ...,\r\n        'author': author->name\r\n    }\r\n  `;\r\n\r\n  const data = await client.fetch(query);\r\n  // console.log(data);\r\n\r\n  return {\r\n    revalidate: 60 * 60 * 24,\r\n    props: {\r\n      post: data,\r\n    },\r\n  };\r\n}\r\n\r\nconst SinglePost = ({ post }) => {\r\n  const router = useRouter();\r\n\r\n  if (router.isFallback) {\r\n    // show loading spinner\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (!post) {\r\n    return (\r\n      <>\r\n        <Head>\r\n          <meta name=\"robots\" content=\"noindex\" />\r\n        </Head>\r\n        <DefaultErrorPage statusCode={404} />;\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-300\">\r\n      <div className=\"max-w-screen-2xl mx-auto bg-white\">\r\n        <div className='px-4 max-w-2xl'>\r\n            <h1> {post.title} </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n"]},"metadata":{},"sourceType":"module"}