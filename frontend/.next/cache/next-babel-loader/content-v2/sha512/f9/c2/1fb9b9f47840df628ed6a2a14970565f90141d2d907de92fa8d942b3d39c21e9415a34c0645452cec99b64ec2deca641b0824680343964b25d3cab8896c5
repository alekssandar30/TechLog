{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\sale\\\\Desktop\\\\\\u2800\\\\Dev\\\\WEB\\\\NextJS\\\\TechLog\\\\frontend\\\\pages\\\\post\\\\[slug].js\";\nimport groq from \"groq\";\nimport client from \"../../client\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport Image from \"next/image\";\nimport { useRouter } from \"next/router\";\nimport DefaultErrorPage from \"next/error\";\nimport Head from \"next/head\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nconst builder = imageUrlBuilder(client);\n\nfunction urlFor(source) {\n  return builder.image(source);\n}\n\nexport function getStaticPaths() {\n  return {\n    paths: [],\n    fallback: true\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  // happens on the server side\n  const {\n    slug\n  } = params;\n  /* try and fetch data and then show data, if we dont get data -> 404 */\n\n  const query = groq`\n    *[_type == 'post' && slug.current == '${slug}']\n  `;\n  const data = await client.fetch(query); // console.log(data);\n\n  return {\n    revalidate: 60 * 60 * 24,\n    props: {\n      post: data\n    }\n  };\n}\n\nconst SinglePost = ({\n  post\n}) => {\n  console.log(post);\n  const router = useRouter();\n\n  if (router.isFallback) {\n    // show loading spinner\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (post == undefined) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"robots\",\n          content: \"noindex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DefaultErrorPage, {\n        statusCode: 404\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), \";\"]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-300\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-screen-2xl mx-auto bg-white min-h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 max-w-2xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-gray-900 py-4\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-5 text-sm text-gray-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-blue-500 block pb-4\",\n            children: post.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(post.publishedAt).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          width: 800,\n          height: 500,\n          src: urlFor(post.mainImage.asset).url()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prose max-w-2xl\",\n          children: /*#__PURE__*/_jsxDEV(BlockContent, {\n            blocks: post.body,\n            projectId: client.projectId,\n            dataset: client.dataset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\nexport default SinglePost;","map":{"version":3,"sources":["C:/Users/sale/Desktop/â €/Dev/WEB/NextJS/TechLog/frontend/pages/post/[slug].js"],"names":["groq","client","imageUrlBuilder","Image","useRouter","DefaultErrorPage","Head","BlockContent","builder","urlFor","source","image","getStaticPaths","paths","fallback","getStaticProps","params","slug","query","data","fetch","revalidate","props","post","SinglePost","console","log","router","isFallback","undefined","title","author","Date","publishedAt","toDateString","mainImage","asset","url","body","projectId","dataset"],"mappings":"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","sourcesContent":["import groq from \"groq\";\r\nimport client from \"../../client\";\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\nimport Image from \"next/image\";\r\nimport { useRouter } from \"next/router\";\r\nimport DefaultErrorPage from \"next/error\";\r\nimport Head from \"next/head\";\r\nimport BlockContent from \"@sanity/block-content-to-react\";\r\n\r\nconst builder = imageUrlBuilder(client);\r\n\r\nfunction urlFor(source) {\r\n  return builder.image(source);\r\n}\r\n\r\nexport function getStaticPaths() {\r\n  return {\r\n    paths: [],\r\n    fallback: true,\r\n  };\r\n}\r\n\r\nexport async function getStaticProps({ params }) {\r\n  // happens on the server side\r\n  const { slug } = params;\r\n\r\n  /* try and fetch data and then show data, if we dont get data -> 404 */\r\n  const query = groq`\r\n    *[_type == 'post' && slug.current == '${slug}']\r\n  `;\r\n\r\n  const data = await client.fetch(query);\r\n  // console.log(data);\r\n\r\n  return {\r\n    revalidate: 60 * 60 * 24,\r\n    props: {\r\n      post: data,\r\n    },\r\n  };\r\n}\r\n\r\nconst SinglePost = ({ post }) => {\r\n  console.log(post);\r\n  const router = useRouter();\r\n\r\n  if (router.isFallback) {\r\n    // show loading spinner\r\n    return <h1>Loading...</h1>;\r\n  }\r\n\r\n  if (post == undefined) {\r\n    return (\r\n      <>\r\n        <Head>\r\n          <meta name=\"robots\" content=\"noindex\" />\r\n        </Head>\r\n        <DefaultErrorPage statusCode={404} />;\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-300\">\r\n      <div className=\"max-w-screen-2xl mx-auto bg-white min-h-screen\">\r\n        <div className=\"px-4 max-w-2xl mx-auto\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 py-4\">\r\n            {post.title}\r\n          </h1>\r\n          <div className=\"flex space-x-5 text-sm text-gray-500\">\r\n            <span className=\"text-blue-500 block pb-4\">{post.author}</span>\r\n            <span>{new Date(post.publishedAt).toDateString()}</span>\r\n          </div>\r\n\r\n          <Image width={800} height={500} src={urlFor(post.mainImage.asset).url()} />\r\n\r\n          <div className=\"prose max-w-2xl\">\r\n            <BlockContent\r\n              blocks={post.body}\r\n              projectId={client.projectId}\r\n              dataset={client.dataset}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SinglePost;\r\n"]},"metadata":{},"sourceType":"module"}